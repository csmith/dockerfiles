FROM {{image "golang"}} AS build

{{template "clone-github.gotpl" (map
    "Project" "csmith/certwrapper"
    "Dir" "/go/src/github.com/csmith/certwrapper"
)}}

{{template "go-build.gotpl" (map
    "Package" "."
    "BuildFlags" "-tags lego_httpreq"
    "Target" "/out/certwrapper"
    "LicensesPath" "/out/notices/certwrapper"
)}}

{{template "clone-github.gotpl" (map
    "Project" "emersion/soju"
    "Dir" "/go/src/github.com/emersion/soju"
)}}

RUN set -eux; \
    GOOS=linux go build -a -ldflags '-extldflags "-static"' -trimpath -ldflags=-buildid= -tags=moderncsqlite -o /out/soju ./cmd/soju; \
    GOOS=linux go build -a -ldflags '-extldflags "-static"' -trimpath -ldflags=-buildid= -tags=moderncsqlite -o /out/sojuctl ./cmd/sojuctl; \
    # TODO: find a license tool that doesn't hardcode Google's opinion on "forbidden" licenses :/
    # go-licenses save ./... --save_path=/notices; \
    # Create folders for volumes
    install -o 65532 -g 65532 -d /out/data /out/certs;

FROM {{image "base"}}

ENV CERTWRAPPER_CERTIFICATE_PATH=/certs/certificate.pem \
    CERTWRAPPER_DNS_PROVIDER=httpreq \
    CERTWRAPPER_ISSUER_PATH=/certs/issuer.perm \
    CERTWRAPPER_PRIVATE_KEY_PATH=/certs/privatekey.pem \
    CERTWRAPPER_USER_PATH=/certs/user.json

COPY --from=build /out/ /
VOLUME ["/data", "/certs"]

ENTRYPOINT ["/certwrapper"]
CMD ["/soju"]
