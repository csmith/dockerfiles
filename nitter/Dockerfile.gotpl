FROM {{image "alpine" }} as nimbuild

ENV TAG={{ github_tag "nim-lang/nim" }}

ENV PATH=/opt/nim/bin:/opt/nimble/bin:$PATH

RUN set -eux; \
    # Dependencies and source for bootstrapping
    apk add --no-cache --virtual .build-deps \
        {{range $key, $value := alpine_packages "curl" -}}
        {{$key}}={{$value}} \
        {{end}}; \
    curl -sfLo nim.tar.xz https://nim-lang.org/download/nim-${TAG:1}-linux_x64.tar.xz; \
    curl -sfLo nim.tar.xz.sha256 https://nim-lang.org/download/nim-${TAG:1}-linux_x64.tar.xz.sha256; \
    echo "$(awk '{print $1}' nim.tar.xz.sha256) *nim.tar.xz" | sha256sum -wc -; \
    tar -C /tmp -xf nim.tar.xz; \
    mv /tmp/nim-* /tmp/nim; \
    cd /tmp/nim; \
    ./install.sh /usr/bin; \
    cp /tmp/nim/bin/nimble /usr/bin/nimble;

FROM nimbuild as build

#No tags on the project, will just have to update this as needed until some tags are made
ENV TAG=5caf77481f70be5118edf885e9f4417a26074edb

RUN set -eux; \
    apk add --no-cache \
        {{range $key, $value := alpine_packages "binutils" "git" "bash" "gcc" "musl-dev" "pcre-dev" "openssl" "openssl-dev" "libsass" "libsass-dev" "sqlite-libs" -}}
        {{$key}}={{$value}} \
        {{end}}; \
    git clone -b master --single-branch git://github.com/zedeus/nitter /src/nitter; \
    mkdir -p /src/libs; \
    cp /usr/lib/libsqlite3* /src/libs; \
    cp /usr/lib/libssl* /src/libs; \
    cp /usr/lib/libcrypto* /src/libs; \
    cp /usr/lib/libpcre* /src/libs; \
    cd /src/nitter; \
    git checkout $TAG; \
    nimble build -y -d:release; \
    strip -s nitter; \
    nimble scss

FROM {{ image "base" }}

COPY --from=build /src/libs/* /usr/lib/
COPY --from=build /src/nitter/nitter /home/nonroot/nitter
COPY --from=build /src/nitter/public /home/nonroot/public

WORKDIR /home/nonroot
ENTRYPOINT ["/home/nonroot/nitter"]
